{"version":3,"file":"createFanOutlineGeometry.js","sources":["../../../Source/Core/FanOutlineGeometry.js","../../../Source/WorkersES6/createFanOutlineGeometry.js"],"sourcesContent":["import BoundingSphere from \"./BoundingSphere.js\";\nimport Cartesian3 from \"./Cartesian3.js\";\nimport ComponentDatatype from \"./ComponentDatatype.js\";\nimport defaultValue from \"./defaultValue.js\";\nimport defined from \"./defined.js\";\nimport DeveloperError from \"./DeveloperError.js\";\nimport Geometry from \"./Geometry.js\";\nimport GeometryAttribute from \"./GeometryAttribute.js\";\nimport GeometryAttributes from \"./GeometryAttributes.js\";\nimport IndexDatatype from \"./IndexDatatype.js\";\nimport PrimitiveType from \"./PrimitiveType.js\";\nimport VertexFormat from \"./VertexFormat.js\";\n\nlet scratchCartesian = new Cartesian3();\n\n/**\n * Describes the outline of a {@link FanGeometry}.\n *\n * @alias FanOutlineGeometry\n * @ionsdk\n * @constructor\n *\n * @param {Object} options An object with the following properties:\n * @param {Spherical[]} options.directions The directions, pointing outward from the origin, that defined the fan.\n * @param {Number} [options.radius] The radius at which to draw the fan.\n * @param {Boolean} [options.perDirectionRadius] When set to true, the magnitude of each direction is used in place of a constant radius.\n * @param {Number} [options.numberOfRings=6] The number of outline rings to draw, starting from the outer edge and equidistantly spaced towards the center.\n * @param {VertexFormat} [options.vertexFormat=VertexFormat.DEFAULT] The vertex attributes to be computed.\n */\nfunction FanOutlineGeometry(options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(options.directions)) {\n    throw new DeveloperError(\"options.directions is required\");\n  }\n  if (!options.perDirectionRadius && !defined(options.radius)) {\n    throw new DeveloperError(\n      \"options.radius is required when options.perDirectionRadius is undefined or false.\"\n    );\n  }\n  //>>includeEnd('debug');\n\n  this._radius = options.radius;\n  this._directions = options.directions;\n  this._perDirectionRadius = options.perDirectionRadius;\n  this._numberOfRings = defaultValue(options.numberOfRings, 6);\n  this._vertexFormat = defaultValue(options.vertexFormat, VertexFormat.DEFAULT);\n  this._workerName = \"createFanOutlineGeometry\";\n}\n\n/**\n * Computes the geometric representation of a fan outline, including its vertices, indices, and a bounding sphere.\n *\n * @param {FanOutlineGeometry} fanGeometry A description of the fan.\n * @returns {Geometry|undefined} The computed vertices and indices.\n */\nFanOutlineGeometry.createGeometry = function (fanGeometry) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(fanGeometry)) {\n    throw new DeveloperError(\"fanGeometry is required\");\n  }\n  //>>includeEnd('debug');\n\n  const radius = fanGeometry._radius;\n  const perDirectionRadius =\n    defined(fanGeometry._perDirectionRadius) && fanGeometry._perDirectionRadius;\n  const directions = fanGeometry._directions;\n  const vertexFormat = fanGeometry._vertexFormat;\n  const numberOfRings = fanGeometry._numberOfRings;\n\n  let i;\n  let x;\n  let ring;\n  let length;\n  let maxRadius = 0;\n  let positions;\n  const directionsLength = directions.length;\n  const attributes = new GeometryAttributes();\n\n  if (vertexFormat.position) {\n    x = 0;\n    length = directionsLength * 3 * numberOfRings;\n    positions = new Float64Array(length);\n\n    for (ring = 0; ring < numberOfRings; ring++) {\n      for (i = 0; i < directionsLength; i++) {\n        scratchCartesian = Cartesian3.fromSpherical(\n          directions[i],\n          scratchCartesian\n        );\n        const currentRadius = perDirectionRadius\n          ? Cartesian3.magnitude(scratchCartesian)\n          : radius;\n        const ringRadius = (currentRadius / numberOfRings) * (ring + 1);\n        scratchCartesian = Cartesian3.normalize(\n          scratchCartesian,\n          scratchCartesian\n        );\n\n        positions[x++] = scratchCartesian.x * ringRadius;\n        positions[x++] = scratchCartesian.y * ringRadius;\n        positions[x++] = scratchCartesian.z * ringRadius;\n        maxRadius = Math.max(maxRadius, currentRadius);\n      }\n    }\n\n    attributes.position = new GeometryAttribute({\n      componentDatatype: ComponentDatatype.DOUBLE,\n      componentsPerAttribute: 3,\n      values: positions,\n    });\n  }\n\n  x = 0;\n  length = directionsLength * 2 * numberOfRings;\n  const indices = IndexDatatype.createTypedArray(length / 3, length);\n\n  for (ring = 0; ring < numberOfRings; ring++) {\n    const offset = ring * directionsLength;\n    for (i = 0; i < directionsLength - 1; i++) {\n      indices[x++] = i + offset;\n      indices[x++] = i + 1 + offset;\n    }\n    indices[x++] = i + offset;\n    indices[x++] = 0 + offset;\n  }\n\n  return new Geometry({\n    attributes: attributes,\n    indices: indices,\n    primitiveType: PrimitiveType.LINES,\n    boundingSphere: new BoundingSphere(Cartesian3.ZERO, maxRadius),\n  });\n};\nexport default FanOutlineGeometry;\n","import FanOutlineGeometry from \"../Core/FanOutlineGeometry.js\";\nexport default FanOutlineGeometry.createGeometry;\n"],"names":["Cartesian3","defaultValue","defined","DeveloperError","VertexFormat","GeometryAttributes","GeometryAttribute","ComponentDatatype","IndexDatatype","Geometry","PrimitiveType","BoundingSphere"],"mappings":"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"}